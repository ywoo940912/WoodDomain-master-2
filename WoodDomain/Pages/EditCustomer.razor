@page "/editcustomer/{id}"
@inject IJSRuntime JS;



<form @onsubmit="uploadEmployee">
	<div class="card">
		<div class="card-header" style="background-image: linear-gradient( 180deg, rgb(5, 39, 103) 0%, #3a0647 70%);">
			<h5 class="text-white">Edit Customer</h5>
		</div>
		
		<div class="card-body">

			<div class="form-row">
				<div class="form-group col-md-6">
					<label for="inputEmail4">First Name</label>
					<input type="text" class="form-control" id="cusFirstName" placeholder="First Name" required>
				</div>
				<div class="form-group col-md-6">
					<label for="inputPassword4">Last Name</label>
					<input type="text" class="form-control" id="cusLastName" placeholder="Last Name" required>
				</div>
			</div>
			<div class="form-row">
				<div class="form-group col-md-6">
					<label for="inputEmail4">Email</label>
					<input type="email" class="form-control" id="cusEmail" placeholder="Email" required>
				</div>
				<div class="form-group col-md-6">
					<label for="inputPassword4">City</label>
					<input type="text" class="form-control" id="cusCity" placeholder="City" required>
				</div>
			</div>
			<div class="form-row">
				<div class="form-group col-md-6">
					<label for="inputEmail4">State</label>
					<input type="text" class="form-control" id="cusState" placeholder="State" required>
				</div>
				<div class="form-group col-md-6">
					<label for="inputPassword4">Zip Code</label>
					<input type="text" class="form-control" id="cusZIP" placeholder="Zip Code" required>
				</div>
			</div>

			<div class="form-row">
				<div class="form-group col-md-12">
					<label for="inputEmail4">Address</label>
					<textarea class="form-control" id="cusAddress" required></textarea>
				</div>
			</div>
			<button id="submitButton" type="submit" class="btn btn-primary float-right" style="background-image: linear-gradient( 180deg, rgb(5, 39, 103) 0%, #3a0647 70%);" >Save</button>
		</div>
	</div>
</form>


@code { 
	[Parameter]
	public string Id { get; set; }

	async Task uploadEmployee()
	{
		await JS.InvokeVoidAsync("uploadCustomerToFirebase", Id);

	}
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{

		if (firstRender)
		{
			await JS.InvokeVoidAsync("getCustomerFromFirebaseById", Id);
		}

	}
	protected override async Task OnInitializedAsync()
	{
		await JS.InvokeVoidAsync("isLogin");
	}
}
